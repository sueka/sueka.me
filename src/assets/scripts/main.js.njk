window.addEventListener('touchstart', () => {})

;(() => {
  const isGecko = /Gecko\/\d+/.test(navigator.userAgent)
  const isBlink = /Chrome\/\d+/.test(navigator.userAgent)

  if (!isGecko && !isBlink) {
    return
  }

  const links = document.querySelectorAll('link[href$="{{ "~/assets/stylesheets/horizontal.css" | url }}"], link[href$="{{ "~/assets/stylesheets/vertical.css" | url }}"]')

  for (const link of links) {
    if (isGecko) {
      const linkForGecko = link.cloneNode()

      linkForGecko.href = linkForGecko.getAttribute('href').replace(/(?=\.css$)/, '-gecko')
      document.head.insertBefore(linkForGecko, link.nextSibling)
    }

    if (isBlink) {
      const linkForBlink = link.cloneNode()

      linkForBlink.href = linkForBlink.getAttribute('href').replace(/(?=\.css$)/, '-blink')
      document.head.insertBefore(linkForBlink, link.nextSibling)
    }
  }
})()

;(() => {
  const link = document.querySelector('#linkToVerticalCss')

  // Skip on horizontal-writing pages
  if (link == null) {
    return
  }

  const observer = new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type === 'attributes' && mutation.attributeName === 'lang') {
        link.disabled = mutation.target.lang !== 'ja'
      }
    }
  })

  observer.observe(document.documentElement, { attributes: true })
})()
